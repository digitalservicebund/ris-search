# A pipeline definition to run just the E2E tests
name: End-to-end tests

on:
  workflow_call:
    inputs:
      backend_tag:
        type: string
        required: false
      frontend_tag:
        type: string
        required: false
  workflow_dispatch:

env:
  RUN_ID: ${{ github.run_id }}
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_IMAGE_NAME: ${{ github.repository }}
  CONTAINER_IMAGE_VERSION: ${{ github.sha }}
  REPORTS_REPOSITORY: digitalservicebund/ris-search
jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - profile: public
            env_file_name: .env.ci.public
          - profile: internal
            env_file_name: .env.ci.internal
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 40
      - name: Log into container registry
        uses: docker/login-action@3b8fed7e4b60203b2aa0ecc6c6d6d91d12c06760
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Adjust permissions to docker
        run: sudo chmod 666 /var/run/docker.sock
      - name: Set environment variables for backend and frontend
        env:
          INPUT_BACKEND_TAG: ${{ inputs.backend_tag }}
          INPUT_FRONTEND_TAG: ${{ inputs.frontend_tag }}
        run: |
          BRANCH_NAME=${{ github.head_ref || github.ref_name }}
          BRANCH_NAME_TAG=$(echo $BRANCH_NAME | sed -e 's/[^[:alnum:]]/-/g')
          if [[ -n "${INPUT_BACKEND_TAG}" ]]; then
            echo "BACKEND_IMAGE=ghcr.io/digitalservicebund/ris-search:${INPUT_BACKEND_TAG}" >> $GITHUB_ENV
          elif docker pull ghcr.io/digitalservicebund/ris-search:${BRANCH_NAME_TAG}; then
            echo "BACKEND_IMAGE=ghcr.io/digitalservicebund/ris-search:${BRANCH_NAME_TAG}" >> $GITHUB_ENV
          else
            echo "BACKEND_IMAGE=ghcr.io/digitalservicebund/ris-search:main" >> $GITHUB_ENV
          fi
          if [[ -n "${INPUT_FRONTEND_TAG}" ]]; then
            echo "FRONTEND_IMAGE=ghcr.io/digitalservicebund/ris-search/frontend:${INPUT_FRONTEND_TAG}" >> $GITHUB_ENV
          elif docker pull ghcr.io/digitalservicebund/ris-search/frontend:${BRANCH_NAME_TAG}; then
            echo "FRONTEND_IMAGE=ghcr.io/digitalservicebund/ris-search/frontend:${BRANCH_NAME_TAG}" >> $GITHUB_ENV
          else
            echo "FRONTEND_IMAGE=ghcr.io/digitalservicebund/ris-search/frontend:main" >> $GITHUB_ENV
          fi
      - name: Run needed services
        run: docker compose -f docker-compose-ci.yml up -d
        env:
          BACKEND_IMAGE: ${{ env.BACKEND_IMAGE }}
          FRONTEND_IMAGE: ${{ env.FRONTEND_IMAGE }}
          ENV_FILE_NAME: ${{ matrix.env_file_name }}
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Get Playwright version
        working-directory: ./frontend
        run: echo "PLAYWRIGHT_VERSION=$(yarn list --pattern @playwright/test | awk -F "@" 'NR==2 {print $NF}')" >> $GITHUB_ENV
      - name: Cache browser binaries
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: /home/runner/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}-chromium
      - name: Cache npm cache
        uses: actions/cache@v4
        id: cache-npm-cache
        with:
          path: /home/runner/.npm
          key: npm-cache-${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright
        run: npm install @playwright/test@${{ env.PLAYWRIGHT_VERSION }} @axe-core/playwright axe-html-reporter
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium firefox webkit
      - name: Wait for containers to be fully up
        timeout-minutes: 5
        run: |
          until curl --silent --fail http://localhost:3000; do
            echo "Waiting for containers to be fully up..."
            sleep 15
          done
      - name: Run Accessibility Playwright tests on staging - chromium
        if: ${{ matrix.profile == 'internal' }}
        run: npx playwright test accessibility.spec.ts --project chromium
        working-directory: ./frontend
        env:
          RIS_BASE_URL: http://localhost:3000
          TZ: Europe/Berlin
      - name: Run Accessibility Playwright tests on staging - firefox
        if: ${{ matrix.profile == 'internal' }}
        run: npx playwright test accessibility.spec.ts --project firefox
        working-directory: ./frontend
        env:
          RIS_BASE_URL: http://localhost:3000
          TZ: Europe/Berlin
      - name: Run Accessibility Playwright tests on staging - webkit
        if: ${{ matrix.profile == 'internal' }}
        run: npx playwright test accessibility.spec.ts--project webkit
        working-directory: ./frontend
        env:
          RIS_BASE_URL: http://localhost:3000
          TZ: Europe/Berlin
      - name: Run All Playwright tests on prototype
        if: ${{ matrix.profile == 'public' }}
        run: npx playwright test --project chromium
        working-directory: ./frontend
        env:
          RIS_BASE_URL: http://localhost:3000
          TZ: Europe/Berlin
      - name: Upload screenshots and traces of failed tests (${{ matrix.profile }})
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: failed-e2e-tests-${{ inputs.project }}-${{ matrix.profile }}
          path: |
            frontend/playwright-report/**/*.png
            frontend/playwright-report/**/*.zip
          retention-days: 5
      - name: Output logs on failure (${{ matrix.profile }})
        if: ${{ failure() }}
        run: docker compose -f docker-compose-ci.yml logs > docker-compose-logs-${{ matrix.profile }}.log
        env:
          BACKEND_IMAGE: ${{ env.BACKEND_IMAGE }}
          FRONTEND_IMAGE: ${{ env.FRONTEND_IMAGE }}
          ENV_FILE_NAME: ${{ matrix.env_file_name }}
      - name: Upload docker logs (${{ matrix.profile }})
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: docker-compose-logs-${{ matrix.profile }}
          path: docker-compose-logs-${{ matrix.profile }}.log
          retention-days: 5
      - name: Tear down services (${{ matrix.profile }})
        if: ${{ always() }}
        run: docker compose -f docker-compose-ci.yml down -v
        env:
          ENV_FILE_NAME: ${{ matrix.env_file_name }}
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@66c485757701f8d5dbee32f24df38d904ca693ba
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  push-reports:
    runs-on: ubuntu-latest
    env:
      reports-repo: digitalservicebund/ris-reports
    needs:
      - e2e-tests
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ env.reports-repo }}
          ssh-key: ${{ secrets.REPORTS_DEPLOY_KEY }}
          ref: main
      - name: Setup git config
        run: |
          git config user.name "${{ github.repository }}"
          # This email identifies the commit as GitHub Actions - see https://github.com/orgs/community/discussions/26560
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: E2E test reports - Download
        uses: actions/download-artifact@v4
        with:
          path: tmp/playwright-report/
          pattern: playwright-report-*
      - name: Add latest directory
        run: mkdir -p test-reports/ris-search/latest
      - name: E2E test reports - git add report
        uses: digitalservicebund/add-ris-report@c6c8735d23295c36a271c75e7dedc9b6b9a9ef5e
        with:
          filePath: tmp/playwright-report/
          destinationDir: test-reports/ris-search
          reportIsDirectory: true
      - name: Push reports
        run: |
          git diff-index --cached --quiet HEAD ||
            git commit \
              -m ${{ toJSON(github.event.head_commit.message) }} \
              -m "From commit: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}" &&
            git push origin main &&
            echo "Pushed reports to ${{ github.server_url }}/${{ env.reports-repo }}" >> $GITHUB_STEP_SUMMARY
